openapi: 3.0.3
info:
  title: API de Gerenciamento de Treinamentos
  description: API para gerenciamento de treinamentos, seções, categorias e usuários
  version: 1.0.0
servers:
  - url: http://127.0.0.1:5000
    description: Servidor de Desenvolvimento

paths:
  /trainings:
    get:
      summary: Obter todos os treinamentos
      responses:
        '200':
          description: Lista de treinamentos obtida com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  trainings:
                    type: array
                    items:
                      type: object
                      properties:
                        id: { type: integer }
                        categoria_id: { type: integer }
                        titulo: { type: string }
                        tamanho: { type: string }
                        descricao: { type: string }
                        arquivo_nome: { type: string }
                        arquivo_caminho: { type: string }
                        created_at: { type: string }
                        updated_at: { type: string }
    post:
      summary: Criar novo treinamento
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                categoria_id: { type: integer }
                titulo: { type: string }
                tamanho: { type: string }
                descricao: { type: string }
                arquivo_nome: { type: string }
                arquivo_caminho: { type: string }
      responses:
        '200':
          description: Treinamento cadastrado com sucesso

  /trainings/{trainingId}:
    put:
      summary: Atualizar treinamento existente
      parameters:
        - name: trainingId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                categoria_id: { type: integer }
                titulo: { type: string }
                descricao: { type: string }
                arquivo_nome: { type: string }
                arquivo_caminho: { type: string }
                tamanho: { type: string }
      responses:
        '200':
          description: Treinamento atualizado com sucesso
    delete:
      summary: Deletar treinamento
      parameters:
        - name: trainingId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Treinamento deletado com sucesso

  /sections:
    get:
      summary: Obter todas as seções
      responses:
        '200':
          description: Lista de seções
          content:
            application/json:
              schema:
                type: object
                properties:
                  sections:
                    type: array
                    items:
                      type: object
                      properties:
                        id: { type: integer }
                        nome: { type: string }
                        created_at: { type: string }
                        updated_at: { type: string }
    post:
      summary: Criar nova seção
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nome: { type: string }
      responses:
        '200':
          description: Seção criada com sucesso

  /sections/{sectionId}:
    put:
      summary: Atualizar seção
      parameters:
        - name: sectionId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nome: { type: string }
      responses:
        '200':
          description: Seção atualizada com sucesso
    delete:
      summary: Deletar seção
      parameters:
        - name: sectionId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Seção deletada com sucesso

  /categories:
    get:
      summary: Obter todas as categorias
      responses:
        '200':
          description: Lista de categorias
          content:
            application/json:
              schema:
                type: object
                properties:
                  categories:
                    type: array
                    items:
                      type: object
                      properties:
                        id: { type: integer }
                        secao_id: { type: integer }
                        nome: { type: string }
                        icone_svg: { type: string }
                        created_at: { type: string }
                        updated_at: { type: string }
    post:
      summary: Criar nova categoria
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                secao_id: { type: integer }
                nome: { type: string }
                icone_svg: { type: string }
      responses:
        '200':
          description: Categoria criada com sucesso

  /categories/{categoryId}:
    put:
      summary: Atualizar categoria
      parameters:
        - name: categoryId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                secao_id: { type: integer }
                nome: { type: string }
                icone_svg: { type: string }
      responses:
        '200':
          description: Categoria atualizada com sucesso
    delete:
      summary: Deletar categoria
      parameters:
        - name: categoryId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Categoria deletada com sucesso

  /users/usuarios:
    get:
      summary: Obter todos os usuários
      responses:
        '200':
          description: Lista de usuários
          content:
            application/json:
              schema:
                type: object
                properties:
                  usuarios:
                    type: array
                    items:
                      type: object
                      properties:
                        id: { type: integer }
                        nome: { type: string }
                        email: { type: string }
                        role: { type: string }
                        created_at: { type: string }
                        updated_at: { type: string }
    post:
      summary: Cadastrar novo usuário
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nome: { type: string }
                email: { type: string }
                password_hash: { type: string }
                role:
                  type: string
                  default: user
      responses:
        '200':
          description: Usuário criado com sucesso

  /users/usuarios/{id}:
    get:
      summary: Obter usuário por ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Dados do usuário
          content:
            application/json:
              schema:
                type: object
                properties:
                  id: { type: integer }
                  nome: { type: string }
                  email: { type: string }
                  role: { type: string }
                  created_at: { type: string }
                  updated_at: { type: string }

    delete:
      summary: Remover usuário
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Usuário deletado com sucesso

  /users/login:
    post:
      summary: Autenticar usuário
      description: Realiza login com email e senha
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password]
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Login bem-sucedido
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  usuario:
                    type: object
                    properties:
                      id: { type: integer }
                      nome: { type: string }
                      email: { type: string }
                      role: { type: string }
        '401':
          description: Credenciais inválidas

  /users/reset-password:
    post:
      summary: Solicitar redefinição de senha
      description: Envia um token de recuperação para o email informado
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email]
              properties:
                email:
                  type: string
      responses:
        '200':
          description: Token de recuperação enviado

  /users/new-password:
    post:
      summary: Redefinir senha
      description: Redefine a senha do usuário com base no token de recuperação
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [token, nova_senha]
              properties:
                token:
                  type: string
                nova_senha:
                  type: string
      responses:
        '200':
          description: Senha redefinida com sucesso
        '400':
          description: Token inválido ou expirado

